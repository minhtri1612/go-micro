apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "product-db.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "product-db.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "product-db.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "product-db.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "product-db.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "product-db.fullname" . }}
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size | default "1Gi" }}