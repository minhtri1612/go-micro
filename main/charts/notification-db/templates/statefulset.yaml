apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "notification-db.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "notification-db.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "notification-db.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "notification-db.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "notification-db.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 5432
          name: postgres
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
              - "pg_isready"
              - "-U"
              - "{{ .Values.auth.username }}"
              - "-d"
              - "{{ .Values.auth.database }}"
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ include "notification-db.fullname" . }}
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "notification-db.fullname" . }}
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "notification-db.fullname" . }}
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
